server:
  port: 8080
 
eureka:
  client:
    serviceUrl:
      defaultZone: http://localhost:8761/eureka 
      
 

spring:
  application:
    name: api-gateway
  main:
    web-application-type: reactive
    allow-bean-definition-overriding: true
  boot:
    admin:
      client:
        url: http://localhost:8081
  cloud:
    gateway:
      routes:
      - id: costCalculation
        uri: lb://COST-CALCULATION
        predicates:
        - Path=/cost-calculation/**
      - id: mktplaceIntegration
        uri: lb://MKTPLACE-INTEGRATION
        predicates:
        - Path=/mktplace-integration/**
      - id: orders
        uri: lb://ORDERS
        predicates:
        - Path=/orders/**
      - id: sysadmin
        uri: lb://SYSADMIN
        predicates:
        - Path=/sysadmin/**
      - id: organizational
        uri: lb://ORGANIZATIONAL
        predicates:
        - Path=/organizational/**
      - id: oauth
        uri: lb://OAUTH
        predicates:
        - Path=/oauth/**

# actuator
#indica que health deve mostrar detalhes sempre
#alem do health e do info ele sempre vai export todos endpoints disponiveis
management:
  endpoint:
    health:
      show-details: always


jwt:
  secret: segredo
## puxa informacoes do projeto do pom.xml
#info:
#  app:
#    name: @project.name@
#  description: @project.description@
#  version: @project.version@
#  encoding: @project.build.sourceEncoding@
#  java:
#    version: @java.version@

# configurando o Spring Boot Admin Server



#LOG level
logging:
 level:
   root: INFO
 
