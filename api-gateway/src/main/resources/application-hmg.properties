spring.application.name=api-gateway
server.port=443
server.ssl.key-store=classpath:springboot.jks
server.ssl.key-store-password=123456
server.ssl.key-store-type=jks
server.ssl.key-alias=springboot
server.ssl.key-password=123456

eureka.instance.instance-id=${spring.application.name}:${spring.application.instance_id:${random.value}}
spring.cloud.gateway.discovery.locator.lower-case-service-id=true
eureka.client.service-url.defaultZone=http://127.0.0.1:8080/eureka

# configurando o Spring Boot Admin Server
#spring.boot.admin.client.url=http://127.0.0.1:8081

spring.cloud.gateway.globalcors.cors-configurations.[/**].allowed-origins=https://vps39840.publiccloud.com.br:8443,http://localhost:8080
spring.cloud.gateway.globalcors.cors-configurations.[/**].allowed-methods=*
spring.cloud.gateway.globalcors.cors-configurations.[/**].allowed-headers=*
spring.cloud.gateway.globalcors.cors-configurations.[/**].allow-credentials=true

		#corsConfig.setAllowedMethods(Arrays.asList("POST", "GET", "PUT", "DELETE", "PATCH"));
		#corsConfig.setAllowCredentials(true);
		#corsConfig.setAllowedHeaders(Arrays.asList("Authorization", "Content-Type", "companyId"));


spring.jackson.default-property-inclusion=NON_NULL
jwt.secret=gustavopiresdesouzacaimarsilveira

#LOG level
logging.level.root=INFO
logging.file.name=log/${spring.application.name}.log