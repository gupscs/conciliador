spring.application.name=api-gateway
server.port=443
server.ssl.key-store=classpath:springboot.p12
server.ssl.key-store-password=S!lv3ir@10
server.ssl.key-store-type=pkcs12
server.ssl.key-alias=springboot
server.ssl.key-password=S3gr3d0!@


eureka.instance.instance-id=${spring.application.name}:${spring.application.instance_id:${random.value}}

eureka.client.service-url.defaultZone=http://127.0.0.1:8080/eureka

# configurando o Spring Boot Admin Server
spring.boot.admin.client.url=http://127.0.0.1:8081



spring.cloud.gateway.discovery.locator.enabled=true
spring.cloud.gateway.discovery.locator.lower-case-service-id=true

spring.security.oauth2.resourceserver.opaquetoken.client-id=myapp
spring.security.oauth2.resourceserver.opaquetoken.client-secret=123
spring.security.oauth2.resourceserver.opaquetoken.introspection-uri=https://127.0.01/oauth/oauth/check_token

spring.main.web-application-type=reactive


# actuator
#indica que health deve mostrar detalhes sempre
management.endpoint.health.show-details=always

#alem do health e do info ele sempre vai export todos endpoints disponiveis
management.endpoints.web.exposure.include=*

cors.allowedOrigins=http://vps39242.publiccloud.com.br,http://localhost:8080

# puxa informacoes do projeto do pom.xml
info.app.name=@project.name@
info.app.description=@project.description@
info.app.version=@project.version@
info.app.encoding=@project.build.sourceEncoding@
info.app.java.version=@java.version@



#LOG level
logging.level.root=INFO
logging.file.path=/opt/conciliador/log
logging.file.name=${spring.application.name}.log